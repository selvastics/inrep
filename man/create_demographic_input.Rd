% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ui_utils.R
\name{create_demographic_input}
\alias{create_demographic_input}
\title{Create Demographic Input Component for Assessment Interface}
\usage{
create_demographic_input(dem, index, input_type, value)
}
\arguments{
\item{dem}{Character string specifying the demographic variable name to
display as the input label (e.g., "Age", "Gender", "Education Level").}

\item{index}{Numeric index for the input element, used to create unique
input IDs in the format "demo_[index]".}

\item{input_type}{Character string specifying the type of input control.
Options: \code{"numeric"} for numeric inputs, \code{"select"} for
dropdown selections, \code{"text"} for text inputs. Default is \code{"text"}.}

\item{value}{Current value for the input. Should match the expected type
(numeric for "numeric", character for "select" and "text").}
}
\value{
A Shiny div element containing the formatted demographic input
  with proper labeling, styling, and accessibility attributes.
}
\description{
Generates standardized demographic input controls for assessment interfaces
with accessibility features, validation, and consistent styling. Supports
multiple input types commonly used in psychometric research for participant
characterization and demographic data collection.
}
\details{
This function creates standardized demographic input components that
integrate seamlessly with assessment workflows and maintain consistency
across different research studies:

\strong{Input Type Features:}
\itemize{
  \item \strong{Numeric}: Age, years of experience, etc. (range: 1-150)
  \item \strong{Select}: Gender, education levels, with predefined options
  \item \strong{Text}: Open-ended demographic information
}

\strong{Accessibility Features:}
\itemize{
  \item Properly associated labels for screen readers
  \item Logical tab order and keyboard navigation
  \item Clear visual hierarchy and contrast
  \item Responsive design for different screen sizes
}

\strong{Research Standards:}
\itemize{
  \item Consistent styling across assessment interfaces
  \item Validation-ready for data quality assurance
  \item Integration with IRT-Based Assessment workflows
  \item Support for multilingual interfaces
}

The generated inputs automatically integrate with the assessment's
reactive value system and validation framework, ensuring data quality
and participant experience standards.
}
\section{Input Validation}{

The function creates inputs with built-in validation:
\itemize{
  \item Numeric inputs: Range validation (1-150) suitable for age and similar measures
  \item Select inputs: Predefined options with "Select" placeholder
  \item Text inputs: Open-ended with length limits applied by assessment framework
}
}

\section{Styling}{

All inputs use consistent CSS classes:
\itemize{
  \item \code{form-group}: Container div for spacing and alignment
  \item \code{input-label}: Consistent label styling across assessments
  \item Responsive width (100%) for mobile compatibility
}
}

\examples{
\dontrun{
# Numeric input for age
age_input <- create_demographic_input(
  dem = "Age",
  index = 1,
  input_type = "numeric",
  value = 25
)

# Select input for gender
gender_input <- create_demographic_input(
  dem = "Gender",
  index = 2,
  input_type = "select",
  value = "Female"
)

# Text input for occupation
occupation_input <- create_demographic_input(
  dem = "Occupation",
  index = 3,
  input_type = "text",
  value = "Teacher"
)

# Multiple demographics in assessment
demographics <- c("Age", "Gender", "Education")
inputs <- lapply(seq_along(demographics), function(i) {
  create_demographic_input(
    dem = demographics[i],
    index = i,
    input_type = if (i == 1) "numeric" else "select",
    value = NULL
  )
})
}

}
\seealso{

}

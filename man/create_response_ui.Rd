% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ui_helper.R
\name{create_response_ui}
\alias{create_response_ui}
\title{Create Response UI Component for Assessment Items}
\usage{
create_response_ui(item, response_ui_type)
}
\arguments{
\item{item}{A data frame row containing complete item details including
question text and response options. Expected columns include:
\code{Question}, \code{Option1}, \code{Option2}, \code{Option3}, \code{Option4}.
Additional options (Option5, Option6, etc.) are supported.}

\item{response_ui_type}{Character string specifying the type of response
interface. Options: \code{"radio"} for radio buttons, \code{"slider"} for
slider input, \code{"dropdown"} for dropdown selection. Default is \code{"radio"}.}
}
\value{
A Shiny UI element (radioButtons, sliderInput, or selectInput)
  configured for the specified response type with proper accessibility
  attributes and validation support.
}
\description{
Generates standardized Shiny UI components for participant responses to
assessment items. Supports multiple response formats commonly used in
psychometric assessments, with accessibility features and consistent
styling optimized for TAM-based item response modeling.
}
\details{
This function creates standardized response interfaces that integrate
seamlessly with TAM's item response modeling and adaptive testing algorithms:

\strong{Response Interface Types:}
\itemize{
  \item \strong{Radio Buttons}: Optimal for 2-5 response options, clear visual selection
  \item \strong{Dropdown}: Space-efficient for items with many response options
  \item \strong{Slider}: Continuous-feel interface for Likert-type scales
}

\strong{Psychometric Considerations:}
\itemize{
  \item Response order preservation for TAM parameter estimation
  \item Clear option labeling to minimize response errors
  \item Consistent interaction patterns across assessment items
  \item Validation-ready for missing response detection
}

\strong{Accessibility Features:}
\itemize{
  \item Keyboard navigation support for all interface types
  \item Screen reader compatibility with proper labeling
  \item High contrast options and responsive design
  \item Touch-friendly interfaces for mobile devices
}

\strong{Research Standards:}
\itemize{
  \item Consistent option presentation across items
  \item Integration with response time tracking
  \item Support for multilingual option labels
  \item Quality assurance through input validation
}

The generated UI components automatically integrate with the assessment's
reactive system and TAM-based ability estimation procedures.
}
\section{Response Validation}{

The function creates interfaces with built-in validation features:
\itemize{
  \item Radio buttons: Single selection enforcement, clear visual feedback
  \item Dropdown: Placeholder option ("") for missing response detection
  \item Slider: Numeric validation with defined min/max bounds
}
}

\section{Integration with TAM}{

Response values are formatted for direct use with TAM functions:
\itemize{
  \item Consistent option indexing (1, 2, 3, ...) for TAM parameter matrices
  \item Proper handling of missing responses for TAM's missing data procedures
  \item Response time integration for speed-accuracy analysis
}
}

\examples{
\dontrun{
# Personality item with radio buttons
personality_item <- data.frame(
  Question = "I enjoy meeting new people",
  Option1 = "Strongly Disagree",
  Option2 = "Disagree",
  Option3 = "Neutral",
  Option4 = "Agree",
  Option5 = "Strongly Agree"
)

radio_ui <- create_response_ui(personality_item, "radio")

# Cognitive item with dropdown
cognitive_item <- data.frame(
  Question = "What is the next number in the sequence: 2, 4, 6, ?",
  Option1 = "7",
  Option2 = "8",
  Option3 = "9",
  Option4 = "10"
)

dropdown_ui <- create_response_ui(cognitive_item, "dropdown")

# Attitude scale with slider
attitude_item <- data.frame(
  Question = "How satisfied are you with your current job?",
  Option1 = "Very Dissatisfied",
  Option2 = "Dissatisfied",
  Option3 = "Neutral",
  Option4 = "Satisfied",
  Option5 = "Very Satisfied"
)

slider_ui <- create_response_ui(attitude_item, "slider")

# Dynamic UI creation in assessment
current_item <- item_bank[selected_item_index, ]
response_interface <- create_response_ui(current_item, config$response_ui_type)
}

}
\seealso{
\code{\link{create_demographic_input}} for demographic interface components,
\code{\link{launch_study}} for complete assessment workflow,
\code{\link{select_next_item}} for adaptive item selection,
\code{\link{estimate_ability}} for TAM-based ability estimation
}

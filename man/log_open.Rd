% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{log_open}
\alias{log_open}
\title{Initialize Comprehensive Logging System}
\usage{
log_open(path)
}
\arguments{
\item{path}{File path for the log.}

\item{level}{Character string specifying minimum log level to capture.
Options: \code{"DEBUG"}, \code{"INFO"}, \code{"WARN"}, \code{"ERROR"}.}

\item{format}{Character string specifying log format. Options:
\code{"standard"}, \code{"json"}, \code{"detailed"}.}

\item{console_output}{Logical indicating whether to also output to console.}
}
\value{
Logical: \code{TRUE} if logging initialized successfully, \code{FALSE} otherwise.
  On failure, falls back to console-only logging with warning message.

TRUE if successful, FALSE otherwise.
}
\description{
Sets up a comprehensive logging system for inrep assessments with multiple
output options, structured formatting, and integration with the logr package.
Provides detailed audit trails for research compliance and debugging.
}
\details{
The logging system provides:
\itemize{
  \item Timestamped entries with session identification
  \item Multiple log levels with filtering capabilities
  \item Structured output formats for automated processing
  \item Integration with assessment workflow tracking
  \item Participant action logging for audit trails
  \item Performance metrics and error tracking
}

Log entries include:
\itemize{
  \item Assessment initialization and configuration
  \item Item administration and response capture
  \item Ability estimation and item selection decisions
  \item User interface interactions and navigation
  \item Data validation and quality checks
  \item Session management and termination
}
}
\examples{
\dontrun{
# Initialize basic logging
log_success <- initialize_logging()

# Initialize with custom file path
log_file <- file.path(tempdir(), "my_assessment.log")
initialize_logging(path = log_file, level = "INFO")

# Initialize with JSON format for automated processing
initialize_logging(
  path = "assessment_log.json",
  level = "DEBUG",
  format = "json",
  console_output = TRUE
)

# Check if logging is working
if (exists("log_print")) {
  log_print("Test message", level = "INFO")
  cat("Logging is active\n")
}
}

}
\seealso{
\itemize{
  \item \code{\link{log_print}} for writing log entries
  \item \code{\link{launch_study}} for assessment execution with logging
  \item \code{logr} package for advanced logging features
}
Log Open

Opens a log file connection.
}
